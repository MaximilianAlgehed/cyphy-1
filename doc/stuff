need a way to propagate h to arbitrary instances
reference streams need to know the size of the time step
alternatively only generate information that does not depend on h
and let the property implementer take care of creating a proper
stream from that

monitors to specify test properties

shuffling h around is problematic, especially when giving arbitrary instances.

maybe this if we use notquickcheck
class Arbitrary a where
  h :: Double     -- :: forall. Fractional b => b
  tmax :: Double
  arbitrary :: ?h :: Double => Gen a  -- we can pass h behind the scenes
  shrink :: a -> [a]
  valid :: a -> Bool

getting hold of data to test. many streams are hidden in the models, need to
return tuples containing all relevant data. cumbersome

relative or absolute references as standard?

why do we need [(a, b)] instead of just [a]?
for shrinking. simplifying a stream is much harder than simplifying the
interval/reference pair it was generated from

shrinking is very difficult while still keeping the test case valid


if we make quickcheck play with streams we can deal with "forever" behind
the scenes

Shrinking concept diffuse on streams.
    Shrinking seem to be the thing which sets us appart
    Shrinking can end up reducing badness of error until it just triggers which makes more difficult to analyze.
        Only shrink when badness doesn't go down.
    Specifying shrinking.
        reduceAmplitude, reduceNrSteps, reduceTotalRange, prefixesOf, ...
        What if simpler is larger amplitude?
            Enforce bounds?
            Stop after n shrinks?
        How do we specify shrinking while maintaining stream specification?
            butNotBelow 2 . reduceAmplitude
    What is simpler?
    How do we reduce noise to get insight from counter examples if not by shrinking?
        Data visualization?
            Aggregate many failing test cases and display them togheter.
            Categorize fail traces and analyze inputs for each category.
    The user as shrinking strategy?

Specifying properties.
    Past LTL.
    Monitors.
    STL.


Next meeting.
    Only 4 weeks remaining.
    Paper?
    Maybe shrinking is not the beat way of reducing noice in counter examples?



run properties in parallel to gain speedups
